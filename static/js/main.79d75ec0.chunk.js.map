{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/score.js","components/scores/Scores.js","components/scores/OneUserAllScores.js","components/scores/ScoreForm.js","components/scores/ScoreCreate.js","components/scores/Score.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","createScore","score","indexScores","get","indexUsersScores","showScore","deleteScore","Scores","scores","setScores","response","getScores","length","Spinner","animation","role","scoreList","map","_id","format","createdAt","owner","OneUsersAllScores","usersScores","setUsersScores","posts","getAllScores","text","ScoreForm","handleSubmit","setScore","ScoreCreate","createdId","setCreatedId","Score","deleted","setDeleted","useParams","fetchData","handleDeleteClick","onClick","App","msgAlerts","setMsgAlerts","uuid","path","element","render","OneUserAllScores","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.79d75ec0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Container from 'react-bootstrap/Container'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </>\n)\n\nconst unauthenticatedOptions = (\n  <>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </>\n)\n\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link'>Home</NavLink>\n  </>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Container>\n      <Navbar.Brand>\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>dance-of-the-dragonfly-frontend</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ms-auto'>\n          {user && (\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\n          )}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://peaceful-tundra-89430.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignIn = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import axios from 'axios'\r\nimport apiUrl from '../apiConfig'\r\n\r\nexport const createScore = (score, user) => {\r\n  return axios.post(\r\n    `${apiUrl}/scores/`,\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nexport const indexScores = (user) => {\r\n  return axios.get(\r\n    `${apiUrl}/scores/`,\r\n    // Pass along the authorization which includes our user's token\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\nexport const indexUsersScores = (user) => {\r\n  return axios.get(\r\n    `${apiUrl}/scores/owner/`,\r\n    // Pass along the authorization which includes our user's token\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\n\r\nexport const showScore = (id, user) => {\r\n  return axios.get(`${apiUrl}/scores/${id}/`, {\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const deleteScore = (id, user) => {\r\n  return axios.delete(`${apiUrl}/scores/${id}`, {\r\n    headers: {\r\n      Authorization: `Bearer ${user.token}`\r\n    }\r\n  })\r\n}\r\n\r\nexport const updateScore = (id, score, user) => {\r\n  return axios.patch(\r\n    `${apiUrl}/scores/${id}`,\r\n    { score: { score } },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`\r\n      }\r\n    }\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { indexScores } from '../../api/score'\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { format } from 'timeago.js'\r\nimport './Scores.css'\r\nconst Scores = ({ user, msgAlert }) => {\r\n  const [scores, setScores] = useState([])\r\n\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getScores = async () => {\r\n      try {\r\n        const response = await indexScores(user)\r\n        setScores(response.data.scores)\r\n      } catch (error) {\r\n        // Alert the user, that they failed to sign up\r\n        msgAlert({\r\n          heading: 'Scores Cant be displayed: ' + error.message,\r\n          message: 'Cant index Scores',\r\n          // this will be red\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    getScores()\r\n  }, [])\r\n\r\n  if (scores.length === 0) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  }\r\n  const scoreList = scores.map(score => (\r\n    <div className='scores' key={score._id}>\r\n      <Link to={`/scores/${score._id}`}>{score.score}</Link>\r\n      <span className='scoreDate'>{format(score.createdAt)}</span>\r\n      <h6>{score.score}</h6>\r\n      <h6>User {score.owner} Score</h6>\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Scores</h3>\r\n        <ul>{scoreList}</ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scores\r\n","import React, { useEffect, useState } from 'react'\r\nimport { indexUsersScores } from '../../api/score'\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport { Spinner } from 'react-bootstrap'\r\nimport { format } from 'timeago.js'\r\n// import './Posts.css'\r\nconst OneUsersAllScores = ({ user, msgAlert }) => {\r\n  const [usersScores, setUsersScores] = useState([])\r\n\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getAllScores = async () => {\r\n      try {\r\n        const res = await indexUsersScores(user)\r\n        setUsersScores(res.data.posts)\r\n      } catch (error) {\r\n        // Alert the user, that they failed to sign up\r\n        msgAlert({\r\n          heading: 'Posts Cant be displayed: ' + error.message,\r\n          message: 'Cant index Post',\r\n          // this will be red\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    getAllScores()\r\n  }, [])\r\n\r\n  if (!usersScores.length) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  }\r\n  const scoreList = usersScores.map(score => (\r\n    <div className='scores' key={score._id}>\r\n      <Link to={`/scores/${score._id}`}>{score.score}</Link>\r\n      <span className='scoreDate'>{format(score.createdAt)}</span>\r\n      <h6>{score.text}</h6>\r\n      <h6>{score.owner}</h6>\r\n    </div>\r\n  ))\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Posts</h3>\r\n        <ul>{scoreList}</ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OneUsersAllScores\r\n","import React from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { SendCheck } from 'react-bootstrap-icons'\r\n\r\nconst ScoreForm = ({ handleSubmit, score, setScore }) => (\r\n  <Form onSubmit={handleSubmit}>\r\n    <Form.Group controlId='score'>\r\n      <Form.Label>Score</Form.Label>\r\n      <Form.Control\r\n        placeholder='Score'\r\n        name='edit score'\r\n        value={score}\r\n        onChange={event => setScore(event.target.value)}\r\n      />\r\n    </Form.Group>\r\n    <Button className='mt-2 Bttn' variant='primary' type='submit'>Submit <SendCheck /></Button>\r\n    <div className='mt-5 footer' >Change your score the easy way.</div>\r\n  </Form>\r\n)\r\nexport default ScoreForm\r\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { createScore } from '../../api/score'\r\nimport ScoreForm from './ScoreForm'\r\n\r\nconst ScoreCreate = ({ user, msgAlert }) => {\r\n  const [score, setScore] = useState('')\r\n  const [createdId, setCreatedId] = useState(null)\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const res = await createScore(score, user)\r\n      setCreatedId(res.data.score._id)\r\n      console.log(score)\r\n      msgAlert({\r\n        heading: 'Score Created',\r\n        message: `Created ${score.owner}'s score successfully.`,\r\n        variant: 'success'\r\n      })\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to create Score',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  // if user is null, redirect to home page\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  } else if (createdId) {\r\n    // if movie has been created,Navigate to the 'show' page\r\n    return <Navigate to={`/scores/${createdId}`} />\r\n  }\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-md-3 mx-auto mt-5'>\r\n        <h3>Create Score</h3>\r\n        <ScoreForm\r\n          handleSubmit={handleSubmit}\r\n          score={score}\r\n          setScore={setScore}\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScoreCreate\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, Navigate, useParams } from 'react-router-dom'\r\nimport { Spinner, Button } from 'react-bootstrap'\r\nimport { deleteScore, showScore } from '../../api/score'\r\nimport { format } from 'timeago.js'\r\nimport './Score.css'\r\nimport { SendCheck, TrashFill } from 'react-bootstrap-icons'\r\n\r\nconst Score = ({ user, msgAlert }) => {\r\n  const [score, setScore] = useState(null)\r\n  const [deleted, setDeleted] = useState(false)\r\n  const { id } = useParams()\r\n\r\n  // if user is null, redirect to home page\r\n  // Note: Must check before useEffect, since it needs user\r\n  if (!user) {\r\n    return <Navigate to='/' />\r\n  }\r\n\r\n  useEffect(() => {\r\n    // When using async & await in a `useEffect` function\r\n    // We have to wrap our `async` code in a function:\r\n    // https://stackoverflow.com/a/53572588\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await showScore(id, user)\r\n        setScore(res.data.score)\r\n        console.log(user)\r\n      } catch (error) {\r\n        msgAlert({\r\n          heading: 'Score failed to load this is coming from (Score.js Error)',\r\n          message: error.message,\r\n          variant: 'danger'\r\n        })\r\n      }\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const handleDeleteClick = async () => {\r\n    try {\r\n      await deleteScore(id, user)\r\n      setDeleted(true)\r\n    } catch (error) {\r\n      msgAlert({\r\n        heading: 'Failed to delete Score',\r\n        message: error.message,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  // 3 states:\r\n  // If movie is `null`, we are loading\r\n  if (!score) {\r\n    return (\r\n      <Spinner animation='border' role='status'>\r\n        <span className='visually-hidden'>Loading...</span>\r\n      </Spinner>\r\n    )\r\n  } else if (deleted) {\r\n    return <Navigate to='/scores' />\r\n  } else {\r\n    // We have a post, display it!\r\n    return (\r\n      <div className='post'>\r\n        <div className='PostWrapper'>\r\n          <h3>{score.score}\r\n            <span className='postDate'>{format(score.createdAt)}</span>\r\n          </h3>\r\n          <p>Easy dub? : {score.score}</p>\r\n          <p>{score.owner}</p>\r\n          <Link to={`/scores/${id}/edit`}>\r\n            <Button className='Bttn' variant='primary' type='submit'>Update Score <SendCheck /></Button>\r\n          </Link>\r\n          <Button className='Bttn' variant='danger' onClick={handleDeleteClick}>Delete Score<TrashFill /></Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Score\r\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n// import { NavigationContainer } from '@react-navigation/native'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\nimport Scores from './components/scores/Scores'\nimport OneUserAllScores from './components/scores/OneUserAllScores'\nimport ScoreCreate from './components/scores/ScoreCreate'\nimport Score from './components/scores/Score'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map(msgAlert => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\n          />\n          <Route\n            path='/sign-out'\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\n          />\n          <Route\n            user={user}\n            path='/scores/create'\n            render={() => (\n              <ScoreCreate msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <Route\n            user={user}\n            path='/scores/owner'\n            render={() => (\n              <OneUserAllScores msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <Route\n            user={user}\n            path='/scores/:id'\n            render={() => (\n              <Score msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <Route\n            user={user}\n            path='/scores'\n            render={() => (\n              <Scores msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}